|findPrimeNumbers
clk => bloco_operativo_find_prime_numbers:BO.clk
clk => bloco_controle_find_prime_numbers:BC.clk
reset_req => bloco_operativo_find_prime_numbers:BO.reset_req
reset_req => bloco_controle_find_prime_numbers:BC.reset_req
chipselect => bloco_controle_find_prime_numbers:BC.chipselect
readd => bloco_controle_find_prime_numbers:BC.readd
writee => bloco_controle_find_prime_numbers:BC.writee
writedata[0] => bloco_operativo_find_prime_numbers:BO.writedata[0]
writedata[1] => bloco_operativo_find_prime_numbers:BO.writedata[1]
writedata[2] => bloco_operativo_find_prime_numbers:BO.writedata[2]
writedata[3] => bloco_operativo_find_prime_numbers:BO.writedata[3]
writedata[4] => bloco_operativo_find_prime_numbers:BO.writedata[4]
writedata[5] => bloco_operativo_find_prime_numbers:BO.writedata[5]
writedata[6] => bloco_operativo_find_prime_numbers:BO.writedata[6]
writedata[7] => bloco_operativo_find_prime_numbers:BO.writedata[7]
interrupt << bloco_controle_find_prime_numbers:BC.interrupt
readdata[0] << bloco_operativo_find_prime_numbers:BO.readdata[0]
readdata[1] << bloco_operativo_find_prime_numbers:BO.readdata[1]
readdata[2] << bloco_operativo_find_prime_numbers:BO.readdata[2]
readdata[3] << bloco_operativo_find_prime_numbers:BO.readdata[3]
readdata[4] << bloco_operativo_find_prime_numbers:BO.readdata[4]
readdata[5] << bloco_operativo_find_prime_numbers:BO.readdata[5]
readdata[6] << bloco_operativo_find_prime_numbers:BO.readdata[6]
readdata[7] << bloco_operativo_find_prime_numbers:BO.readdata[7]
testEstadoAtual.SL01 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL01
testEstadoAtual.SL03 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL03
testEstadoAtual.SL03a << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL03a
testEstadoAtual.SL05 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL05
testEstadoAtual.SL06 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL06
testEstadoAtual.SL07 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL07
testEstadoAtual.SL08 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL08
testEstadoAtual.SL09 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL09
testEstadoAtual.SL10 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL10
testEstadoAtual.SL11 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL11
testEstadoAtual.SL12 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL12
testEstadoAtual.SL13 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL13
testEstadoAtual.SL14 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL14
testEstadoAtual.SL15 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL15
testEstadoAtual.SL16 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL16
testEstadoAtual.SL18 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL18
testEstadoAtual.SL19 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL19
testEstadoAtual.SL20 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL20
testEstadoAtual.SL22 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL22
testEstadoAtual.SL23 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL23
testEstadoAtual.SL24 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL24
testEstadoAtual.SL24a << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL24a
testEstadoAtual.SL25 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL25
testEstadoAtual.SL26 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL26
testEstadoAtual.SL26a << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL26a
testEstadoAtual.SL27 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL27
testEstadoAtual.SL28 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL28
testEstadoAtual.SL29 << bloco_controle_find_prime_numbers:BC.testEstadoAtual.SL29


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO
clk => registrador:RegAteN.clk
clk => registrador:RegI.clk
clk => registrador:RegNotPrimo.clk
clk => registrador:RegDivisor.clk
clk => registrador:RegDividendo.clk
clk => memoriaRAM:RAM.clock
clk => registrador:RegOutput.clk
reset_req => registrador:RegAteN.reset
reset_req => registrador:RegI.reset
reset_req => registrador:RegDivisor.reset
reset_req => registrador:RegDividendo.reset
reset_req => registrador:RegOutput.reset
writedata[0] => registrador:RegAteN.datain[0]
writedata[1] => registrador:RegAteN.datain[1]
writedata[2] => registrador:RegAteN.datain[2]
writedata[3] => registrador:RegAteN.datain[3]
writedata[4] => registrador:RegAteN.datain[4]
writedata[5] => registrador:RegAteN.datain[5]
writedata[6] => registrador:RegAteN.datain[6]
writedata[7] => registrador:RegAteN.datain[7]
readdata[0] <= registrador:RegOutput.dataout[0]
readdata[1] <= registrador:RegOutput.dataout[1]
readdata[2] <= registrador:RegOutput.dataout[2]
readdata[3] <= registrador:RegOutput.dataout[3]
readdata[4] <= registrador:RegOutput.dataout[4]
readdata[5] <= registrador:RegOutput.dataout[5]
readdata[6] <= registrador:RegOutput.dataout[6]
readdata[7] <= registrador:RegOutput.dataout[7]
cmdSetAteN => registrador:RegAteN.load
cmdSetI => registrador:RegI.load
cmdResetNotPrimo => registrador:RegNotPrimo.reset
cmdSetNotPrimo => registrador:RegNotPrimo.load
cmdSetDivisor => registrador:RegDivisor.load
cmdSetDividendo => registrador:RegDividendo.load
cmdSetVetorI => memoriaRAM:RAM.wren
cmdSetOutput => registrador:RegOutput.load
cmdSelectI => multiplexador2:MuxI.sel
cmdSelectDivisor => multiplexador2:MuxDivisor.sel
cmdSelectDividendo => multiplexador2:MuxDividendo.sel
sttiMenorIgualAteN <= comparadorMenorIgual:CompIAten.output
sttDividendoMaiorIgualDivisor <= comparadorMaiorIgual:CompDividendoDivisor.output
sttDivisorMenorI <= comparadorMenor:CompDivisorI.output
sttDividendoIgualZero <= comparadorIgual:CompDivisorIgualI.output
sttVetorI <= memoriaRAM:RAM.q[0]
testI[0] <= registrador:RegI.dataout[0]
testI[1] <= registrador:RegI.dataout[1]
testI[2] <= registrador:RegI.dataout[2]
testI[3] <= registrador:RegI.dataout[3]
testI[4] <= registrador:RegI.dataout[4]
testI[5] <= registrador:RegI.dataout[5]
testI[6] <= registrador:RegI.dataout[6]
testI[7] <= registrador:RegI.dataout[7]
testDividendo[0] <= registrador:RegDividendo.dataout[0]
testDividendo[1] <= registrador:RegDividendo.dataout[1]
testDividendo[2] <= registrador:RegDividendo.dataout[2]
testDividendo[3] <= registrador:RegDividendo.dataout[3]
testDividendo[4] <= registrador:RegDividendo.dataout[4]
testDividendo[5] <= registrador:RegDividendo.dataout[5]
testDividendo[6] <= registrador:RegDividendo.dataout[6]
testDividendo[7] <= registrador:RegDividendo.dataout[7]
testDivisor[0] <= registrador:RegDivisor.dataout[0]
testDivisor[1] <= registrador:RegDivisor.dataout[1]
testDivisor[2] <= registrador:RegDivisor.dataout[2]
testDivisor[3] <= registrador:RegDivisor.dataout[3]
testDivisor[4] <= registrador:RegDivisor.dataout[4]
testDivisor[5] <= registrador:RegDivisor.dataout[5]
testDivisor[6] <= registrador:RegDivisor.dataout[6]
testDivisor[7] <= registrador:RegDivisor.dataout[7]
testAteN[0] <= registrador:RegAteN.dataout[0]
testAteN[1] <= registrador:RegAteN.dataout[1]
testAteN[2] <= registrador:RegAteN.dataout[2]
testAteN[3] <= registrador:RegAteN.dataout[3]
testAteN[4] <= registrador:RegAteN.dataout[4]
testAteN[5] <= registrador:RegAteN.dataout[5]
testAteN[6] <= registrador:RegAteN.dataout[6]
testAteN[7] <= registrador:RegAteN.dataout[7]
testNotPrimo <= registrador:RegNotPrimo.dataout[0]


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|registrador:RegAteN
clk => estadoAtual[0].CLK
clk => estadoAtual[1].CLK
clk => estadoAtual[2].CLK
clk => estadoAtual[3].CLK
clk => estadoAtual[4].CLK
clk => estadoAtual[5].CLK
clk => estadoAtual[6].CLK
clk => estadoAtual[7].CLK
reset => estadoAtual[0].ACLR
reset => estadoAtual[1].ACLR
reset => estadoAtual[2].ACLR
reset => estadoAtual[3].ACLR
reset => estadoAtual[4].ACLR
reset => estadoAtual[5].ACLR
reset => estadoAtual[6].ACLR
reset => estadoAtual[7].ACLR
load => estadoAtual[7].ENA
load => estadoAtual[6].ENA
load => estadoAtual[5].ENA
load => estadoAtual[4].ENA
load => estadoAtual[3].ENA
load => estadoAtual[2].ENA
load => estadoAtual[1].ENA
load => estadoAtual[0].ENA
datain[0] => estadoAtual[0].DATAIN
datain[1] => estadoAtual[1].DATAIN
datain[2] => estadoAtual[2].DATAIN
datain[3] => estadoAtual[3].DATAIN
datain[4] => estadoAtual[4].DATAIN
datain[5] => estadoAtual[5].DATAIN
datain[6] => estadoAtual[6].DATAIN
datain[7] => estadoAtual[7].DATAIN
dataout[0] <= estadoAtual[0].DB_MAX_OUTPUT_PORT_TYPE
dataout[1] <= estadoAtual[1].DB_MAX_OUTPUT_PORT_TYPE
dataout[2] <= estadoAtual[2].DB_MAX_OUTPUT_PORT_TYPE
dataout[3] <= estadoAtual[3].DB_MAX_OUTPUT_PORT_TYPE
dataout[4] <= estadoAtual[4].DB_MAX_OUTPUT_PORT_TYPE
dataout[5] <= estadoAtual[5].DB_MAX_OUTPUT_PORT_TYPE
dataout[6] <= estadoAtual[6].DB_MAX_OUTPUT_PORT_TYPE
dataout[7] <= estadoAtual[7].DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|incrementador:IncI
inp[0] => Add0.IN16
inp[1] => Add0.IN15
inp[2] => Add0.IN14
inp[3] => Add0.IN13
inp[4] => Add0.IN12
inp[5] => Add0.IN11
inp[6] => Add0.IN10
inp[7] => Add0.IN9
outp[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[4] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[5] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[6] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[7] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|multiplexador2:MuxI
inp0[0] => tmp.DATAA
inp0[1] => tmp.DATAA
inp0[2] => tmp.DATAA
inp0[3] => tmp.DATAA
inp0[4] => tmp.DATAA
inp0[5] => tmp.DATAA
inp0[6] => tmp.DATAA
inp0[7] => tmp.DATAA
inp1[0] => tmp.DATAB
inp1[1] => tmp.DATAB
inp1[2] => tmp.DATAB
inp1[3] => tmp.DATAB
inp1[4] => tmp.DATAB
inp1[5] => tmp.DATAB
inp1[6] => tmp.DATAB
inp1[7] => tmp.DATAB
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
outp[0] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[1] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[2] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[3] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[4] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[5] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[6] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[7] <= tmp.DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|registrador:RegI
clk => estadoAtual[0].CLK
clk => estadoAtual[1].CLK
clk => estadoAtual[2].CLK
clk => estadoAtual[3].CLK
clk => estadoAtual[4].CLK
clk => estadoAtual[5].CLK
clk => estadoAtual[6].CLK
clk => estadoAtual[7].CLK
reset => estadoAtual[0].ACLR
reset => estadoAtual[1].ACLR
reset => estadoAtual[2].ACLR
reset => estadoAtual[3].ACLR
reset => estadoAtual[4].ACLR
reset => estadoAtual[5].ACLR
reset => estadoAtual[6].ACLR
reset => estadoAtual[7].ACLR
load => estadoAtual[7].ENA
load => estadoAtual[6].ENA
load => estadoAtual[5].ENA
load => estadoAtual[4].ENA
load => estadoAtual[3].ENA
load => estadoAtual[2].ENA
load => estadoAtual[1].ENA
load => estadoAtual[0].ENA
datain[0] => estadoAtual[0].DATAIN
datain[1] => estadoAtual[1].DATAIN
datain[2] => estadoAtual[2].DATAIN
datain[3] => estadoAtual[3].DATAIN
datain[4] => estadoAtual[4].DATAIN
datain[5] => estadoAtual[5].DATAIN
datain[6] => estadoAtual[6].DATAIN
datain[7] => estadoAtual[7].DATAIN
dataout[0] <= estadoAtual[0].DB_MAX_OUTPUT_PORT_TYPE
dataout[1] <= estadoAtual[1].DB_MAX_OUTPUT_PORT_TYPE
dataout[2] <= estadoAtual[2].DB_MAX_OUTPUT_PORT_TYPE
dataout[3] <= estadoAtual[3].DB_MAX_OUTPUT_PORT_TYPE
dataout[4] <= estadoAtual[4].DB_MAX_OUTPUT_PORT_TYPE
dataout[5] <= estadoAtual[5].DB_MAX_OUTPUT_PORT_TYPE
dataout[6] <= estadoAtual[6].DB_MAX_OUTPUT_PORT_TYPE
dataout[7] <= estadoAtual[7].DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|registrador:RegNotPrimo
clk => estadoAtual[0].CLK
reset => estadoAtual[0].ACLR
load => estadoAtual[0].ENA
datain[0] => estadoAtual[0].DATAIN
dataout[0] <= estadoAtual[0].DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|incrementador:IncDivisor
inp[0] => Add0.IN16
inp[1] => Add0.IN15
inp[2] => Add0.IN14
inp[3] => Add0.IN13
inp[4] => Add0.IN12
inp[5] => Add0.IN11
inp[6] => Add0.IN10
inp[7] => Add0.IN9
outp[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[4] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[5] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[6] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[7] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|multiplexador2:MuxDivisor
inp0[0] => tmp.DATAA
inp0[1] => tmp.DATAA
inp0[2] => tmp.DATAA
inp0[3] => tmp.DATAA
inp0[4] => tmp.DATAA
inp0[5] => tmp.DATAA
inp0[6] => tmp.DATAA
inp0[7] => tmp.DATAA
inp1[0] => tmp.DATAB
inp1[1] => tmp.DATAB
inp1[2] => tmp.DATAB
inp1[3] => tmp.DATAB
inp1[4] => tmp.DATAB
inp1[5] => tmp.DATAB
inp1[6] => tmp.DATAB
inp1[7] => tmp.DATAB
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
outp[0] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[1] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[2] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[3] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[4] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[5] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[6] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[7] <= tmp.DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|registrador:RegDivisor
clk => estadoAtual[0].CLK
clk => estadoAtual[1].CLK
clk => estadoAtual[2].CLK
clk => estadoAtual[3].CLK
clk => estadoAtual[4].CLK
clk => estadoAtual[5].CLK
clk => estadoAtual[6].CLK
clk => estadoAtual[7].CLK
reset => estadoAtual[0].ACLR
reset => estadoAtual[1].ACLR
reset => estadoAtual[2].ACLR
reset => estadoAtual[3].ACLR
reset => estadoAtual[4].ACLR
reset => estadoAtual[5].ACLR
reset => estadoAtual[6].ACLR
reset => estadoAtual[7].ACLR
load => estadoAtual[7].ENA
load => estadoAtual[6].ENA
load => estadoAtual[5].ENA
load => estadoAtual[4].ENA
load => estadoAtual[3].ENA
load => estadoAtual[2].ENA
load => estadoAtual[1].ENA
load => estadoAtual[0].ENA
datain[0] => estadoAtual[0].DATAIN
datain[1] => estadoAtual[1].DATAIN
datain[2] => estadoAtual[2].DATAIN
datain[3] => estadoAtual[3].DATAIN
datain[4] => estadoAtual[4].DATAIN
datain[5] => estadoAtual[5].DATAIN
datain[6] => estadoAtual[6].DATAIN
datain[7] => estadoAtual[7].DATAIN
dataout[0] <= estadoAtual[0].DB_MAX_OUTPUT_PORT_TYPE
dataout[1] <= estadoAtual[1].DB_MAX_OUTPUT_PORT_TYPE
dataout[2] <= estadoAtual[2].DB_MAX_OUTPUT_PORT_TYPE
dataout[3] <= estadoAtual[3].DB_MAX_OUTPUT_PORT_TYPE
dataout[4] <= estadoAtual[4].DB_MAX_OUTPUT_PORT_TYPE
dataout[5] <= estadoAtual[5].DB_MAX_OUTPUT_PORT_TYPE
dataout[6] <= estadoAtual[6].DB_MAX_OUTPUT_PORT_TYPE
dataout[7] <= estadoAtual[7].DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|subtrator:SubDividendo
inpA[0] => Add0.IN16
inpA[1] => Add0.IN15
inpA[2] => Add0.IN14
inpA[3] => Add0.IN13
inpA[4] => Add0.IN12
inpA[5] => Add0.IN11
inpA[6] => Add0.IN10
inpA[7] => Add0.IN9
inpB[0] => Add0.IN8
inpB[1] => Add0.IN7
inpB[2] => Add0.IN6
inpB[3] => Add0.IN5
inpB[4] => Add0.IN4
inpB[5] => Add0.IN3
inpB[6] => Add0.IN2
inpB[7] => Add0.IN1
outp[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[4] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[5] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[6] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
outp[7] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|multiplexador2:MuxDividendo
inp0[0] => tmp.DATAA
inp0[1] => tmp.DATAA
inp0[2] => tmp.DATAA
inp0[3] => tmp.DATAA
inp0[4] => tmp.DATAA
inp0[5] => tmp.DATAA
inp0[6] => tmp.DATAA
inp0[7] => tmp.DATAA
inp1[0] => tmp.DATAB
inp1[1] => tmp.DATAB
inp1[2] => tmp.DATAB
inp1[3] => tmp.DATAB
inp1[4] => tmp.DATAB
inp1[5] => tmp.DATAB
inp1[6] => tmp.DATAB
inp1[7] => tmp.DATAB
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
sel => tmp.OUTPUTSELECT
outp[0] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[1] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[2] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[3] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[4] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[5] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[6] <= tmp.DB_MAX_OUTPUT_PORT_TYPE
outp[7] <= tmp.DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|registrador:RegDividendo
clk => estadoAtual[0].CLK
clk => estadoAtual[1].CLK
clk => estadoAtual[2].CLK
clk => estadoAtual[3].CLK
clk => estadoAtual[4].CLK
clk => estadoAtual[5].CLK
clk => estadoAtual[6].CLK
clk => estadoAtual[7].CLK
reset => estadoAtual[0].ACLR
reset => estadoAtual[1].ACLR
reset => estadoAtual[2].ACLR
reset => estadoAtual[3].ACLR
reset => estadoAtual[4].ACLR
reset => estadoAtual[5].ACLR
reset => estadoAtual[6].ACLR
reset => estadoAtual[7].ACLR
load => estadoAtual[7].ENA
load => estadoAtual[6].ENA
load => estadoAtual[5].ENA
load => estadoAtual[4].ENA
load => estadoAtual[3].ENA
load => estadoAtual[2].ENA
load => estadoAtual[1].ENA
load => estadoAtual[0].ENA
datain[0] => estadoAtual[0].DATAIN
datain[1] => estadoAtual[1].DATAIN
datain[2] => estadoAtual[2].DATAIN
datain[3] => estadoAtual[3].DATAIN
datain[4] => estadoAtual[4].DATAIN
datain[5] => estadoAtual[5].DATAIN
datain[6] => estadoAtual[6].DATAIN
datain[7] => estadoAtual[7].DATAIN
dataout[0] <= estadoAtual[0].DB_MAX_OUTPUT_PORT_TYPE
dataout[1] <= estadoAtual[1].DB_MAX_OUTPUT_PORT_TYPE
dataout[2] <= estadoAtual[2].DB_MAX_OUTPUT_PORT_TYPE
dataout[3] <= estadoAtual[3].DB_MAX_OUTPUT_PORT_TYPE
dataout[4] <= estadoAtual[4].DB_MAX_OUTPUT_PORT_TYPE
dataout[5] <= estadoAtual[5].DB_MAX_OUTPUT_PORT_TYPE
dataout[6] <= estadoAtual[6].DB_MAX_OUTPUT_PORT_TYPE
dataout[7] <= estadoAtual[7].DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|memoriaRAM:RAM
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
address[3] => altsyncram:altsyncram_component.address_a[3]
address[4] => altsyncram:altsyncram_component.address_a[4]
address[5] => altsyncram:altsyncram_component.address_a[5]
address[6] => altsyncram:altsyncram_component.address_a[6]
address[7] => altsyncram:altsyncram_component.address_a[7]
clock => altsyncram:altsyncram_component.clock0
data[0] => altsyncram:altsyncram_component.data_a[0]
wren => altsyncram:altsyncram_component.wren_a
q[0] <= altsyncram:altsyncram_component.q_a[0]


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|memoriaRAM:RAM|altsyncram:altsyncram_component
wren_a => altsyncram_pup3:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_pup3:auto_generated.data_a[0]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_pup3:auto_generated.address_a[0]
address_a[1] => altsyncram_pup3:auto_generated.address_a[1]
address_a[2] => altsyncram_pup3:auto_generated.address_a[2]
address_a[3] => altsyncram_pup3:auto_generated.address_a[3]
address_a[4] => altsyncram_pup3:auto_generated.address_a[4]
address_a[5] => altsyncram_pup3:auto_generated.address_a[5]
address_a[6] => altsyncram_pup3:auto_generated.address_a[6]
address_a[7] => altsyncram_pup3:auto_generated.address_a[7]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_pup3:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_pup3:auto_generated.q_a[0]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|memoriaRAM:RAM|altsyncram:altsyncram_component|altsyncram_pup3:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
clock0 => ram_block1a0.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
wren_a => ram_block1a0.PORTAWE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|comparadorMenorIgual:CompIAten
inp0[0] => LessThan0.IN8
inp0[0] => Equal0.IN7
inp0[1] => LessThan0.IN7
inp0[1] => Equal0.IN6
inp0[2] => LessThan0.IN6
inp0[2] => Equal0.IN5
inp0[3] => LessThan0.IN5
inp0[3] => Equal0.IN4
inp0[4] => LessThan0.IN4
inp0[4] => Equal0.IN3
inp0[5] => LessThan0.IN3
inp0[5] => Equal0.IN2
inp0[6] => LessThan0.IN2
inp0[6] => Equal0.IN1
inp0[7] => LessThan0.IN1
inp0[7] => Equal0.IN0
inp1[0] => LessThan0.IN16
inp1[0] => Equal0.IN15
inp1[1] => LessThan0.IN15
inp1[1] => Equal0.IN14
inp1[2] => LessThan0.IN14
inp1[2] => Equal0.IN13
inp1[3] => LessThan0.IN13
inp1[3] => Equal0.IN12
inp1[4] => LessThan0.IN12
inp1[4] => Equal0.IN11
inp1[5] => LessThan0.IN11
inp1[5] => Equal0.IN10
inp1[6] => LessThan0.IN10
inp1[6] => Equal0.IN9
inp1[7] => LessThan0.IN9
inp1[7] => Equal0.IN8
output <= ehMenor.DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|comparadorMaiorIgual:CompDividendoDivisor
inp0[0] => LessThan0.IN8
inp0[0] => Equal0.IN7
inp0[1] => LessThan0.IN7
inp0[1] => Equal0.IN6
inp0[2] => LessThan0.IN6
inp0[2] => Equal0.IN5
inp0[3] => LessThan0.IN5
inp0[3] => Equal0.IN4
inp0[4] => LessThan0.IN4
inp0[4] => Equal0.IN3
inp0[5] => LessThan0.IN3
inp0[5] => Equal0.IN2
inp0[6] => LessThan0.IN2
inp0[6] => Equal0.IN1
inp0[7] => LessThan0.IN1
inp0[7] => Equal0.IN0
inp1[0] => LessThan0.IN16
inp1[0] => Equal0.IN15
inp1[1] => LessThan0.IN15
inp1[1] => Equal0.IN14
inp1[2] => LessThan0.IN14
inp1[2] => Equal0.IN13
inp1[3] => LessThan0.IN13
inp1[3] => Equal0.IN12
inp1[4] => LessThan0.IN12
inp1[4] => Equal0.IN11
inp1[5] => LessThan0.IN11
inp1[5] => Equal0.IN10
inp1[6] => LessThan0.IN10
inp1[6] => Equal0.IN9
inp1[7] => LessThan0.IN9
inp1[7] => Equal0.IN8
output <= ehMaior.DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|comparadorMenor:CompDivisorI
inp0[0] => LessThan0.IN8
inp0[1] => LessThan0.IN7
inp0[2] => LessThan0.IN6
inp0[3] => LessThan0.IN5
inp0[4] => LessThan0.IN4
inp0[5] => LessThan0.IN3
inp0[6] => LessThan0.IN2
inp0[7] => LessThan0.IN1
inp1[0] => LessThan0.IN16
inp1[1] => LessThan0.IN15
inp1[2] => LessThan0.IN14
inp1[3] => LessThan0.IN13
inp1[4] => LessThan0.IN12
inp1[5] => LessThan0.IN11
inp1[6] => LessThan0.IN10
inp1[7] => LessThan0.IN9
output <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|comparadorIgual:CompDivisorIgualI
inp0[0] => Equal0.IN7
inp0[1] => Equal0.IN6
inp0[2] => Equal0.IN5
inp0[3] => Equal0.IN4
inp0[4] => Equal0.IN3
inp0[5] => Equal0.IN2
inp0[6] => Equal0.IN1
inp0[7] => Equal0.IN0
inp1[0] => Equal0.IN15
inp1[1] => Equal0.IN14
inp1[2] => Equal0.IN13
inp1[3] => Equal0.IN12
inp1[4] => Equal0.IN11
inp1[5] => Equal0.IN10
inp1[6] => Equal0.IN9
inp1[7] => Equal0.IN8
output <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_operativo_find_prime_numbers:BO|registrador:RegOutput
clk => estadoAtual[0].CLK
clk => estadoAtual[1].CLK
clk => estadoAtual[2].CLK
clk => estadoAtual[3].CLK
clk => estadoAtual[4].CLK
clk => estadoAtual[5].CLK
clk => estadoAtual[6].CLK
clk => estadoAtual[7].CLK
reset => estadoAtual[0].ACLR
reset => estadoAtual[1].ACLR
reset => estadoAtual[2].ACLR
reset => estadoAtual[3].ACLR
reset => estadoAtual[4].ACLR
reset => estadoAtual[5].ACLR
reset => estadoAtual[6].ACLR
reset => estadoAtual[7].ACLR
load => estadoAtual[7].ENA
load => estadoAtual[6].ENA
load => estadoAtual[5].ENA
load => estadoAtual[4].ENA
load => estadoAtual[3].ENA
load => estadoAtual[2].ENA
load => estadoAtual[1].ENA
load => estadoAtual[0].ENA
datain[0] => estadoAtual[0].DATAIN
datain[1] => estadoAtual[1].DATAIN
datain[2] => estadoAtual[2].DATAIN
datain[3] => estadoAtual[3].DATAIN
datain[4] => estadoAtual[4].DATAIN
datain[5] => estadoAtual[5].DATAIN
datain[6] => estadoAtual[6].DATAIN
datain[7] => estadoAtual[7].DATAIN
dataout[0] <= estadoAtual[0].DB_MAX_OUTPUT_PORT_TYPE
dataout[1] <= estadoAtual[1].DB_MAX_OUTPUT_PORT_TYPE
dataout[2] <= estadoAtual[2].DB_MAX_OUTPUT_PORT_TYPE
dataout[3] <= estadoAtual[3].DB_MAX_OUTPUT_PORT_TYPE
dataout[4] <= estadoAtual[4].DB_MAX_OUTPUT_PORT_TYPE
dataout[5] <= estadoAtual[5].DB_MAX_OUTPUT_PORT_TYPE
dataout[6] <= estadoAtual[6].DB_MAX_OUTPUT_PORT_TYPE
dataout[7] <= estadoAtual[7].DB_MAX_OUTPUT_PORT_TYPE


|findPrimeNumbers|bloco_controle_find_prime_numbers:BC
clk => estadoAtual~1.DATAIN
reset_req => estadoAtual~3.DATAIN
chipselect => process_0.IN0
chipselect => process_0.IN0
readd => process_0.IN1
writee => process_0.IN1
sttiMenorIgualAteN => Selector5.IN4
sttiMenorIgualAteN => Selector20.IN4
sttiMenorIgualAteN => Selector18.IN2
sttiMenorIgualAteN => Selector27.IN2
sttDividendoMaiorIgualDivisor => Selector10.IN4
sttDividendoMaiorIgualDivisor => Selector12.IN2
sttDivisorMenorI => Selector8.IN4
sttDivisorMenorI => Selector16.IN3
sttDividendoIgualZero => Selector13.IN4
sttDividendoIgualZero => Selector15.IN2
sttVetorI => Selector25.IN5
sttVetorI => Selector23.IN2
interrupt <= interrupt.DB_MAX_OUTPUT_PORT_TYPE
cmdSetAteN <= cmdSetAteN.DB_MAX_OUTPUT_PORT_TYPE
cmdSetI <= WideOr23.DB_MAX_OUTPUT_PORT_TYPE
cmdResetNotPrimo <= cmdResetNotPrimo.DB_MAX_OUTPUT_PORT_TYPE
cmdSetNotPrimo <= cmdSetNotPrimo.DB_MAX_OUTPUT_PORT_TYPE
cmdSetDivisor <= cmdSetDivisor.DB_MAX_OUTPUT_PORT_TYPE
cmdSetDividendo <= cmdSetDividendo.DB_MAX_OUTPUT_PORT_TYPE
cmdSetVetorI <= cmdSetVetorI.DB_MAX_OUTPUT_PORT_TYPE
cmdSetOutput <= cmdSetOutput.DB_MAX_OUTPUT_PORT_TYPE
cmdSelectI <= cmdSelectI.DB_MAX_OUTPUT_PORT_TYPE
cmdSelectDivisor <= cmdSelectDivisor.DB_MAX_OUTPUT_PORT_TYPE
cmdSelectDividendo <= cmdSelectDividendo.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL01 <= testEstadoAtual.SL01.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL03 <= testEstadoAtual.SL03.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL03a <= testEstadoAtual.SL03a.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL05 <= testEstadoAtual.SL05.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL06 <= testEstadoAtual.SL06.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL07 <= testEstadoAtual.SL07.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL08 <= testEstadoAtual.SL08.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL09 <= testEstadoAtual.SL09.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL10 <= testEstadoAtual.SL10.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL11 <= testEstadoAtual.SL11.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL12 <= testEstadoAtual.SL12.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL13 <= testEstadoAtual.SL13.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL14 <= testEstadoAtual.SL14.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL15 <= testEstadoAtual.SL15.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL16 <= testEstadoAtual.SL16.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL18 <= testEstadoAtual.SL18.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL19 <= testEstadoAtual.SL19.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL20 <= testEstadoAtual.SL20.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL22 <= testEstadoAtual.SL22.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL23 <= testEstadoAtual.SL23.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL24 <= testEstadoAtual.SL24.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL24a <= testEstadoAtual.SL24a.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL25 <= testEstadoAtual.SL25.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL26 <= testEstadoAtual.SL26.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL26a <= testEstadoAtual.SL26a.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL27 <= testEstadoAtual.SL27.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL28 <= testEstadoAtual.SL28.DB_MAX_OUTPUT_PORT_TYPE
testEstadoAtual.SL29 <= testEstadoAtual.SL29.DB_MAX_OUTPUT_PORT_TYPE


