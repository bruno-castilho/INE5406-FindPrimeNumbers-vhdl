library ieee;
use ieee.std_logic_1164.all;

entity testbench_mux2x1 is
end entity;

architecture arch of testbench_mux2x1 is
	component multiplexador2 is
		generic(
			width: positive := 8
		);
		port(
			inp0, inp1: in std_logic_vector(width-1 downto 0);
			sel: in std_logic;
			outp: out std_logic_vector(width-1 downto 0)
		);
	end component;
	signal inp0,inp1: std_logic_vector(n-1 downto 0);
	signal sel: in std_logic;
	signal outp: out std_logic_vector(n-1 downto 0);
	constant latencia: integer := 1;
begin

	uut: multiplexador2 generic map(4) port map(inp0,inp1,sel,outp);

	process
	begin
		inp0 <= "0000";
		inp1 <= "1111";
		sel <= '0';
		wait for latencia ns;
		assert outp="0000" report "Ferrou" severity error;
		sel <= '1';
		wait for latencia ns;
		assert outp="1111" report "Ferrou" severity error;
		inp1 <= "1010";
		wait for latencia ns;
		assert outp="1010" report "Ferrou" severity error;
		-- ... continue
		wait
	end process;
end;